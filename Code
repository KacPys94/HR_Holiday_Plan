//creates a menu in the toolbar after opening the Spreadsheet
function onOpen() {
  
  var ui = SpreadsheetApp.getUi();
  
  var menu = ui.createMenu("Add_Employee");
  menu.addItem("exampleDepart", "Depart");
  
  menu.addToUi();
  
}
// example code for certain department
function Depart()
{
  var ss = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var lC = ss.getLastColumn(); //gets last column
  
  var action = actionQuestion(); //receives an answer
  
  if(action == 1){
    
    var temp = addMoreEmployees();
    Logger.log(temp);
    
    var numOfRows = temp[1] - temp[0] + 1;
    
     var mulInfo = ss.getRange(temp[0],1,numOfRows, 11).getValues(); //get desired values
     //opens Department file
     var ssTT = SpreadsheetApp.openByUrl('').getActiveSheet(); //Connect to the Department File
     var depUrl = ""; //Save URL as string
     var lRssTT = ssTT.getLastRow()+1; //get last row
     ssTT.getRange(lRssTT, 1,numOfRows,11).setValues(mulInfo); //move and paste values
    
    //sheet connected with determined the Head of department
     var urlToNewSheet = Departsheets(ss,temp[1]);
     var newSheet = SpreadsheetApp.openByUrl(urlToNewSheet).getActiveSheet();
     var xxxx = newSheet.getLastRow()+1;
     newSheet.getRange(xxxx,1,numOfRows,11).setValues(mulInfo);
  
     //import data to Global File from Department
     importRanges(depUrl,urlToNewSheet,temp[0],temp[1]);
     
     //autofill the Main File and the Department File
      autoFillFiles(ss,ssTT)
  
     //autofill sheet of the Head of the Department
     fillTheChiefSheet(urlToNewSheet);
    
  }else{    
  
  //get the no. of the row where new user is
  var cc = ss.getActiveCell().getRow();
  //copy all the values from specified row
  var info = ss.getRange(cc, 1, 1, 11).getValues();
  
  var ssTT = SpreadsheetApp.openByUrl('').getActiveSheet();
  var depUrl = "";
  var lRssTT = ssTT.getLastRow()+1;
  //copy all the values to the new row
  ssTT.getRange(lRssTT, 1,1,11).setValues(info);
  
  //sheet connected with determined head of the Department
  var urlToNewSheet = Departsheets(ss,cc);
  var temptemp2 = urlToNewSheet;
  var newSheet = SpreadsheetApp.openByUrl(urlToNewSheet).getActiveSheet();
    var xxxx = newSheet.getLastRow()+1;
  newSheet.getRange(xxxx,1,1,11).setValues(info);
  
  //import data to Global File from APU1
  importRange(APU1_Url,urlToNewSheet);
  
  //autofill the Main File and the Department File
  autoFillFiles(ss,ssTT)
  
  //autofill sheet of the Head of the department
  fillTheChiefSheet(urlToNewSheet);
  
  }
}

function autoFillFiles(ss,ssTT){
    //------------------------------------------------------------------------------------autofill Main file------------------------------------------------
    var lRcolL = lastRowForColumn(ss,12);
    var colL = ss.getRange("L3:L4");
    colL.autoFill(ss.getRange(3,12,lRcolL-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);

    //col AK
    var colY = ss.getRange("AK3:AK4");
    colY.autoFill(ss.getRange(3,37,lRcolL-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
    //col Z
    var colZ = ss.getRange("AL3:AL4");
    colZ.autoFill(ss.getRange(3,38,lRcolL-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
   
    //col AM
    var colZ = ss.getRange("AM3:AM4");
    colZ.autoFill(ss.getRange(3,39,lRcolL-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
    //------------------------------------------------------------------------------------autofill Department file------------------------------------------------
  
    var lRcolLts = lastRowForColumn(ssTT,10);
    
    var colLts = ssTT.getRange("L3:L4");
    colLts.autoFill(ssTT.getRange(3,12,lRcolLts-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
    //col AK
    var colYts = ssTT.getRange("AK3:AK4");
    colYts.autoFill(ssTT.getRange(3,37,lRcolLts-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
    
    //col AL
    var colALts = ssTT.getRange("AL3:AL4");
    colALts.autoFill(ssTT.getRange(3,38,lRcolLts-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
    
    //col AM
    var colZts = ssTT.getRange("AM3:AM4");
    colZts.autoFill(ssTT.getRange(3,39,lRcolLts-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
    
    }

//function looks for spreadsheet assigned to specified chief of department site
function Logisticsheets(sheet,row){
  
  var rz = 'https://';
  var rzStr = "XXX Jan";
  var aa = '';
  var aaStr = "";
  var ebs = '';
  var ebsStr = "";
  var mj = '';
  var mjStr = "";
  var mk = '';
  var mkStr = "";
  var jk = '';
  var jkStr = "";
  var kk = '';
  var kkStr = "";
  var dl = '';
  var dlStr = "";
  var mm = '';
  var mmStr = "";
  var tm = '';
  var tmStr = "";
  var tk = '';
  var tkStr = "";
  var wd = '';
  var wdStr = "";
  
  var dict = {key1: rzStr,
              key2: aaStr,
              key3: ebsStr,
              key4: mjStr,
              key5: mkStr,
              key6: jkStr,
              key7: kkStr,
              key8: dlStr,
              key9: mmStr,
              key10: tmStr,
              key11: tkStr,
              key12: wdStr};
  
  var dictUrl = {key1: rz,
              key2: aa,
              key3: ebs,
              key4: mj,
              key5: mk,
              key6: jk,
              key7: kk,
              key8: dl,
              key9: mm,
              key10: tm,
                 key11: tk,
                 key12:wd};
  
  
  for(const [key, value] of Object.entries(dict)){
    if(sheet.getRange(row,3).getValue() == value)
    {
      var keyDict = key;
    }
  }
  
  for(const [key, value] of Object.entries(dictUrl)){
    if(key == keyDict){return value;}
  }
   
}

function importRange(sheet,sheetCh){
  var ss = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var curCell = ss.getActiveCell().getRow();
  var nameToImport = ss.getRange(curCell,2).getValue();
  var url = sheet.toString();
  var url2 = sheetCh.toString();
  
  var ts = SpreadsheetApp.openByUrl(sheet).getActiveSheet();
  var tsRange = ts.getRange(1,1,ts.getLastRow(),ts.getLastColumn()).getValues();
  var tsLastRow = ts.getLastRow();
  
  for(var i in tsRange){
    for(var j in tsRange[i]){
      //Logger.log(tsRange[i][j]);
      if(tsRange[i][j] == nameToImport){
        var arr = tsRange[i];
        //Logger.log(nameToImport + " exists in Department spreadsheet with following data: " + tsRange[i]);
        arr.splice(0,12);
        arr.splice(12,2);
      }
    }
  }
  
  
  for(var k=12; k<36; k++)
  {
    var monthFormulaGlobal = "=ArrayFormula(vlookup(B" + curCell + ";IMPORTRANGE(\""+ url2 +"\";\"N-1!$B:$AI\");"+ k + ";0))";
    var monthFormulaDep = "=ArrayFormula(vlookup(B" + tsLastRow + ";IMPORTRANGE(\""+ url2 +"\";\"N-1!$B:$AI\");"+ k + ";0))";
    ss.getRange(curCell,k+1).setFormula(monthFormulaGlobal);
    ts.getRange(tsLastRow,k+1).setFormula(monthFormulaDep);
    k+=1;
  }
}

//function for multiple rows should be different
//t0 begginning of the range (up)
//t1 bottom of the range (down)
function importRanges(sheet,sheetCh,t0,t1){
  var ss = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var newT0 = parseInt(t0);
  var newT1 = parseInt(t1);
  var diff = newT1-newT0+1;
  var iter = newT1+1;
  var namesToImport = [];
  var rowToImport = [];
  for(var i=newT0; i<iter; i++){
    namesToImport.push(ss.getRange(i,2).getValue());
    rowToImport.push(ss.getRange(i,2).getRow());
  }
  
  var url = sheet.toString();
  var url2 = sheetCh.toString();
  
  var ts = SpreadsheetApp.openByUrl(sheet).getActiveSheet();
  var tsRange = ts.getRange(1,1,ts.getLastRow(),ts.getLastColumn()).getValues();
  var tsLastRow = ts.getLastRow()-diff+1;
  
  for(var j=0; j<namesToImport.length; j++){
     for(var k=12; k<36; k++)
     {
       var rowToPut = tsLastRow+j;
        var monthFormulaGlobal = "=ArrayFormula(vlookup(B" + rowToImport[j] + ";IMPORTRANGE(\""+ url2 +"\";\"N-1!$B:$AI\");"+ k + ";0))";
        var monthFormulaDep = "=ArrayFormula(vlookup(B" + rowToPut + ";IMPORTRANGE(\""+ url2 +"\";\"N-1!$B:$AI\");"+ k + ";0))";
        ss.getRange(rowToImport[j],k+1).setFormula(monthFormulaGlobal);
        ts.getRange(rowToPut,k+1).setFormula(monthFormulaDep);
       k+=1;
     }
  }
}

//function receives url to specified sheet assigned to the head of the department and connects to it
function fillTheChiefSheet(url){
  
  var ss = SpreadsheetApp.openByUrl(url).getSheetByName('N-1');
  
  //get Last Row of the column with copied data from Main File
  var lRc = lastRowForColumn(ss,2);
  
  //col L - sum(J:K)
  var lRcolL = lastRowForColumn(ss,12);
  if(lRcolL > 3){
  var colL = ss.getRange("L3:L4");
  colL.autoFill(ss.getRange(3,12,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
    
   //3 additional columns H, I, J
    
    var colH = ss.getRange("H3:H4");
    colH.autoFill(ss.getRange(3,8,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
    
    var colI = ss.getRange("I3:I4");
    colI.autoFill(ss.getRange(3,9,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
    
    var colJ = ss.getRange("J3:J4");
    colJ.autoFill(ss.getRange(3,10,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //----------------------------------------------------------------------Months-------------------------------------
  
  //col M
  var colM = ss.getRange("M3:M4");
  colM.autoFill(ss.getRange(3,13,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col N
 // var colN = ss.getRange("N2:N3");
  //colN.autoFill(ss.getRange(2,14,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col O
  var colO = ss.getRange("O3:O4");
  colO.autoFill(ss.getRange(3,15,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col P
 // var colP = ss.getRange("P2:P3");
 // colP.autoFill(ss.getRange(2,16,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col Q
  var colQ = ss.getRange("Q3:Q4");
  colQ.autoFill(ss.getRange(3,17,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col R
 // var colR = ss.getRange("R2:R3");
 // colR.autoFill(ss.getRange(2,18,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col S
  var colS = ss.getRange("S3:S4");
  colS.autoFill(ss.getRange(3,19,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col T
 // var colT = ss.getRange("T2:T3");
 // colT.autoFill(ss.getRange(2,20,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col U
  var colU = ss.getRange("U3:U4");
  colU.autoFill(ss.getRange(3,21,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col V
  //var colV = ss.getRange("V2:V3");
  //colV.autoFill(ss.getRange(2,22,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col W
  var colW = ss.getRange("W3:W4");
  colW.autoFill(ss.getRange(3,23,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col X
  //var colX = ss.getRange("X2:X3");
  //colX.autoFill(ss.getRange(2,24,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col Y
  var colY = ss.getRange("Y3:Y4");
  colY.autoFill(ss.getRange(3,25,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col Z
  //var colZ = ss.getRange("Z2:Z3");
  //colZ.autoFill(ss.getRange(2,26,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col AA
  var colAA = ss.getRange("AA3:AA4");
  colAA.autoFill(ss.getRange(3,27,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col AC
  var colAC = ss.getRange("AC3:AC4");
  colAC.autoFill(ss.getRange(3,29,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col AE
  var colAE = ss.getRange("AE3:AE4");
  colAE.autoFill(ss.getRange(3,31,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col AG
  var colAG = ss.getRange("AG3:AG4");
  colAG.autoFill(ss.getRange(3,33,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col AI
  var colAI = ss.getRange("AI3:AI4");
  colAI.autoFill(ss.getRange(3,35,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col AK
  var colAK = ss.getRange("AK3:AK4");
  colAK.autoFill(ss.getRange(3,37,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col AL
  var colAL = ss.getRange("AL3:AL4");
  colAL.autoFill(ss.getRange(3,38,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  //col AM
  var colAM = ss.getRange("AM3:AM4");
  colAM.autoFill(ss.getRange(3,39,lRc-2), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  }
  
  //---------------------------------------------Fill the columns in the Month sheets------------------------
  autoFillMonth(url,"January",lRc);
  autoFillMonth(url,"February", lRc);
  autoFillMonth(url,"March", lRc);
  autoFillMonth(url,"April", lRc);
  autoFillMonth(url,"May", lRc);
  autoFillMonth(url,"June", lRc);
  autoFillMonth(url,"July", lRc);
  autoFillMonth(url,"August", lRc);
  autoFillMonth(url,"September", lRc);
  autoFillMonth(url,"October", lRc);
  autoFillMonth(url,"November", lRc);
  autoFillMonth(url,"December", lRc);
  
}

function lastRowForColumn(sheet, column){
  // Get the last row with data for the whole sheet.
  var numRows = sheet.getLastRow();
  
  // Get all data for the given column
  var data = sheet.getRange(1, column, numRows).getValues();
  
  // Iterate backwards and find first non empty cell
  for(var f = data.length - 1 ; f >= 0 ; f--){
    if (data[f][0] != null && data[f][0] != ""){
      return f + 1;
    }
  }
}

function autoFillMonth(url,sheetName,lRc)
{
  var ss = SpreadsheetApp.openByUrl(url).getSheetByName(sheetName);
  
  var colA = ss.getRange("A3:A4");
  colA.autoFill(ss.getRange(3,1,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  var colB = ss.getRange("B3:B4");
  colB.autoFill(ss.getRange(3,2,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  var colAH = ss.getRange("AH3:AH4");
  colAH.autoFill(ss.getRange(3,34,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
  
  var colAI = ss.getRange("AI3:AI4");
  colAI.autoFill(ss.getRange(3,35,lRc-1), SpreadsheetApp.AutoFillSeries.DEFAULT_SERIES);
}

function addMoreEmployees(){
  
  var ui = SpreadsheetApp.getUi();
  var response = ui.prompt('Row index of the upper row to be taken', 'Put the number of the upper row where range starts', ui.ButtonSet.OK_CANCEL);
  var answer = [];

// Process the user's response.
if (response.getSelectedButton() == ui.Button.OK) {
  var uppRow = response.getResponseText();
  answer.push(uppRow);
} else {
  Logger.log('The user clicked the close button in the dialog\'s title bar.');
}
  
  var ui2 = SpreadsheetApp.getUi();
  var response2 = ui.prompt('Row index of the bottom row to be taken', 'Put the number of the bottom row where range ends', ui.ButtonSet.OK_CANCEL);

// Process the user's response.
if (response2.getSelectedButton() == ui2.Button.OK) {
  var bottRow2 = response2.getResponseText();
  answer.push(bottRow2);
} else {
  Logger.log('The user clicked the close button in the dialog\'s title bar.');
}
  return answer;
}

function actionQuestion(){
  
  var ui = SpreadsheetApp.getUi();
  var result = ui.alert('Do you want to copy multiple rows?', ui.ButtonSet.YES_NO_CANCEL);
  var answer = new Array();
  if(result == ui.Button.YES){
    answer.push(1);
  }else if(result == ui.Button.NO){
    answer.push(0);
  }else{
   Logger.log('The user clicked the close button in the dialog\'s title bar.'); 
  }
  Logger.log(answer);
  return answer;
}
//add date to the particular sheet
function addDate(ss){
  ss.getRange(1,2).setValue(Utilities.formatDate(new Date(), "GMT+1", "dd/MM/yyyy"));
}
